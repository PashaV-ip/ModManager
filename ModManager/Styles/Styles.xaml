<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="SlideMenuButton" TargetType="{x:Type Button}">
        <Grid x:Name="Btn" Height="45">
            <Border>
                <StackPanel Orientation="Horizontal">
                    <Image HorizontalAlignment="Left" Height="30" Margin="15,0,5,0" Source="{DynamicResource ResourceKey=Img}" Stretch="Fill" VerticalAlignment="Center" Width="30"/>
                    <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden">
                        <Label Background="Transparent" Content="{TemplateBinding Content}" FontSize="14" Margin="10,0,0,0" VerticalAlignment="Center">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="Foreground" Value="#FF9D9999"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="RenderTransform">
                                                <Setter.Value>
                                                    <TranslateTransform x:Name="labelTransform"/>
                                                </Setter.Value>
                                            </Setter>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                                                        From="0" To="0" Duration="0:0:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" 
                                                        To="0" Duration="0:0:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                            <Setter Property="Foreground" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </ScrollViewer>
                </StackPanel>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorderTwo" Background="Transparent">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="BorderThickness" Value="3,0,0,0"/>
                        <Setter Property="BorderBrush" Value="#FF00AEFF"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>







    <ControlTemplate x:Key="SwitchButton" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="Btn" Height="45">
            <Border>
                <Image HorizontalAlignment="Center" Height="30" Margin="5, 5, 5, 5" Source="{DynamicResource ResourceKey=Img}" Stretch="Fill" VerticalAlignment="Center" Width="25"/>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsSelectedBorderTwo" Background="Transparent" CornerRadius="5" Margin="0,0,0,5">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="BorderThickness" Value="3"/>
                        <Setter Property="BorderBrush" Value="#FF00AEFF"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, Mode=FindAncestor}}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>









    <ControlTemplate x:Key="ControlButtons" TargetType="{x:Type Button}">
        <Grid x:Name="Btn" Height="45">
            <Border>
                <StackPanel Orientation="Horizontal">
                    <Image HorizontalAlignment="Left" Height="20" Margin="20,0,0,0" Source="{DynamicResource ResourceKey=Img}" Stretch="Fill" VerticalAlignment="Center" Width="20">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Opacity" Value="0.7"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Label Background="Transparent" Content="{TemplateBinding Content}" FontSize="14" Margin="10,0,0,0" VerticalAlignment="Center">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Foreground" Value="#FF9D9999"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                        <Setter Property="Foreground" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>



    <ControlTemplate x:Key="AddButton" TargetType="{x:Type Button}">
        <Grid x:Name="Btn" Height="45">
            <Border>
                <Label Background="Transparent" Padding="50, 0, 50, 0" HorizontalAlignment="Center" Content="{TemplateBinding Content}" FontSize="14" Margin="10,0,0,0" VerticalAlignment="Center">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>



    <ControlTemplate x:Key="BrowseButtonInOptions" TargetType="{x:Type Button}">
        <Grid x:Name="Btn" Height="45">
            <Border BorderThickness="2" BorderBrush="Black" CornerRadius="5">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF2A3850"/>
                        <GradientStop Color="#FF232A37" Offset="1"/>
                        <GradientStop Color="#FF24283A" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Label Background="Transparent" Padding="20, 0, 20, 0" HorizontalAlignment="Center" Content="{TemplateBinding Content}" FontSize="14" Margin="10,0,10,0" VerticalAlignment="Center">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="#FF9D9999"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>




    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="#FF101010" BorderThickness="2" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>





    <ControlTemplate x:Key="ImageTheButton" TargetType="{x:Type Button}">
        <Grid x:Name="Btn" Height="60" Width="60">
            <Border>
                <Image HorizontalAlignment="Center" Height="55" Margin="1" Source="{DynamicResource ResourceKey=Img}" Stretch="Fill" VerticalAlignment="Center" Width="55">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Opacity" Value="0.9"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Value="true">
                                    <Setter Property="Opacity" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Border>
            <Border x:Name="MouseOverBorder" Background="#FF8D8D8D">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.1"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <Border x:Name="IsEnabledBorder" Background="Transparent" CornerRadius="5" BorderThickness="2" BorderBrush="Goldenrod">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, ElementName=Btn}" Value="true">
                                <Setter Property="Opacity" Value="0.7"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </ControlTemplate>




</ResourceDictionary>